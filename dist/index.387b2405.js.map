{"mappings":"aAEA,MAAMA,WAAaC,SAASC,cAAa,eACnCC,MAAOF,SAASC,cAAa,aAC7BE,KAAOH,SAASC,cAAa,cAC7BG,SAAWJ,SAASC,cAAa,wBACjCI,GAAKL,SAASC,cAAa,mBAC3BK,SAAWN,SAASC,cAAa,yBACjCM,kBAAoBP,SAASC,cAAa,6BAC1CO,KAAOR,SAASC,cAAa,SAC7BQ,OAAST,SAASU,iBAAgB,SAClCC,WAAaX,SAASC,cAAa,QACnCW,UAAYZ,SAASU,iBAAgB,gBACrCG,cAAgBb,SAASC,cAAa,gBACtCa,MAAQd,SAASC,cAAa,UAC9Bc,QAAUf,SAASC,cAAa,YAChCe,IAAMhB,SAASC,cAAa,cAC5BgB,UAAYjB,SAASC,cAAa,cAClCiB,YAAclB,SAASC,cAAa,gBAE1C,IAAIkB,IACAC,IACAC,SACAC,SACAC,IAAKC,IAAKC,IAAKC,SAGfC,IACAC,gBACAC,OAJAC,SAAQ,GACRC,UAAY,EAIZC,MAAQ,EACRC,IAAM,QAEJC,QACJC,GAAKC,KAAKC,SACH,IAAID,QACH,CAAKE,MAAK,OAAUC,IAAG,WAC/BC,KAAO,IAAIC,KAAKC,eAAc,QAAQC,MAAAC,GAAiBC,OAAMF,MAAAN,eAEjDS,EAAQC,EAAUC,QACvBF,OAASA,OACT1C,SAAW2C,OACXzC,SAAW0C,SAIdC,gBAAgBf,QACpBgB,KAAI,sBACQC,EAAQC,EAAUC,EAAUC,GACtCC,MAAMJ,EAAQC,EAAUC,QACnBC,QAAUA,OACVE,OAGPA,YACOA,KAAIb,KAAQrC,SAAQqC,KAAQvC,gBAI/BqD,gBAAgBvB,QACpBgB,KAAI,sBACQQ,EAAQC,EAAUC,EAAUC,GACtCN,MAAMG,EAAQC,EAAUC,QACnBC,UAAYA,OACZC,QAGPA,aACOA,MAAKnB,KAAQvC,UAAQuC,KAASrC,SAAW,cAIzCyD,cACP7C,YAAY8C,MAAMC,QAAO,OACzB,MAAMrB,EAAO,CACXsB,oBAAoB,EACpBC,QAAS,IACTC,WAAY,UAEP,IAAIC,SAAO,CAAEC,EAASC,KAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQ3B,eAIrD+B,eACPC,SAASC,YAAW,+FAEpBlD,IAAM,IAAIiD,SAASE,IAAG,CACpBC,UAAS,MACTf,MAAK,kCACLgB,OAAM,CAAG7D,IAAKC,KACd6D,KAAM,KAED,IAAIZ,SAAO,CAAEC,EAASC,KAC3BD,EAAQ3C,KACR4C,EAAO,IAAIW,MAAK,2BAIpB,MAAMC,QAAO,aAEPC,iBAAgB,WACpB,MAAMC,EAAQnF,MAAK0C,QAAQ1C,MAAKoF,eAAeC,KAChCpF,KAAKyC,QAAQzC,KAAKmF,eAAeC,KAEvC,YAALF,GACFxE,cAAc2E,YAAW,UACzBjF,kBAAkBkF,YAAW,aAE7B5E,cAAc2E,YAAW,WACzBjF,kBAAkBkF,YAAW,WAI3BC,SAAQ,SAAaC,GACzBtE,SAAWsE,EAAEC,OAAOzE,IACpBG,SAAWqE,EAAEC,OAAOxE,IACpBrB,WAAWiE,MAAMC,QAAO,OACxB3D,SAASuF,QACTxF,GAAGgF,MAAK,IAAOhE,SAASyE,QAAQ,OAAOxE,SAASwE,QAAQ,MACxDV,oBAGIW,WAAU,WACd3F,SAASiF,MAAK,GACd/E,SAAS+E,MAAK,GACd9E,kBAAkB8E,MAAK,GACvBtF,WAAWiE,MAAMC,QAAO,QAGpB+B,WAAU,SAAaL,GAC3B,IAAIM,EACJ,GAAS,UAALN,EAAEO,IAAiB,CAWrB,IAVC3E,IAAKC,IAAKC,IAAKC,UAAQ,CACtBxB,MAAK0C,QAAQ1C,MAAKoF,eAAeC,MAChCnF,SAASiF,OACT/E,SAAS+E,OACT9E,kBAAkB8E,OAGrBrD,QACAC,QAEMT,IAAM,IAAMC,KAAO,IAAMC,SAAW,SACxCZ,MAAMqF,UAAUC,OAAM,UACtBrF,QAAQoF,UAAUC,OAAM,eAExBpF,IAAIqF,iBAAgB,SAAQ,WAC1BvF,MAAMqF,UAAUG,IAAG,UACnBvF,QAAQoF,UAAUG,IAAG,UACrBlG,SAASyF,WAMN,YAAHtE,MACF0E,EAAU,IAAIhD,QAAO,CAAE5B,SAAUC,UAAWE,IAAKC,IAAKC,WACjD,YAAHH,MACF0E,EAAU,IAAIxC,QAAO,CAAEpC,SAAUC,UAAWE,IAAKC,IAAKC,WAExDI,SAASyE,KAAKN,GAEdO,cAAcP,GAEdQ,aAAaR,GAEbF,aACAhE,YACA2E,oBAIED,aAAY,SAAaR,GAC7B,MAAMU,EAAQ,IAAI/B,SAASgC,MAAK,CAAGC,OAAQ,GAAIC,OAAM,WAAcC,QAAO,GAC5D,YAAZd,EAAQ/C,KAAkB,KAAM,cAAM+C,EAExC/C,KAAE8D,OAAQ,GAAKC,cAAUhB,EAAW/C,KAAKgE,MAAQ,SAAUjB,EAAQzD,QAK7D2E,EAAKnH,SAASoH,cAAa,OACjCD,EAAGhB,UAAUG,IAAG,UAID,IAAI1B,SAASyC,OAAOF,EAAE,IAGlCG,UAAUrB,EAAQnD,QAClByE,SAASZ,GACTa,MAAM7F,MAWL8F,cAAa,SAAa9B,GAC9B,MAAM+B,EAAU/B,EAAEgC,OAGlB,IAAKD,EAAQvB,UAAUyB,SAAQ,QAAU,CACvC,MAAMC,GAAaH,EAAQI,QAAO,QAASC,aAAY,MACjDC,EAAYlG,SAASH,KAAKsE,GAAYA,EAAQ9D,KAAI8F,QAAQJ,GAC1DK,EAAiBpG,SAASkG,GAAWlF,OAC3CnB,IAAIwG,MAAK,CACPnD,OAAQkD,EACRjD,KAAM,GACNnB,MAAO,KAGTsE,cAAcF,KAIZ1B,cAAa,SAAaP,GAC9BzF,KAAK6H,mBAAkB,aACT,YACApC,EAAQ9D,oBAAoBJ,mDAE5BkE,EAAQ/C,KAAK8D,OAAO,GAAGC,cAAgBhB,EAAQ/C,KAAKgE,MAAM,SACrDjB,EAAQzD,iIAAKyD,EAGA7F,2IAAiB6F,EAGrB3F,6IAIN,YAJkB2F,EAAA/C,KAIV+C,EAAKzC,KAASsC,QACf,GAAKG,EAAQnC,MACpBgC,QAAQ,6CAGZ,YAFDG,EAAA/C,KAEa,OAAK,gHAIlB,YAHA+C,EAAA/C,KAGY,IAAK,UAAyB,YAAb+C,EAAQ/C,KACxC+C,EAAI3C,QAAc2C,EAAGpC,iCAC9B,YAAAoC,EAAA/C,KAA+B,IAAI,iFAKtB,YAAZ+C,EAAQ/C,MACVlD,SACGC,cAAa,QACbkG,UAAUG,IAAG,0CAEF,YAAZL,EAAQ/C,MACVlD,SACGC,cAAa,QACbkG,UAAUG,IAAG,2CAId8B,cAAa,SAAaE,GAC9BvC,aAGAwC,OAAM,CAAEpH,IAAKC,MAIbO,IAAI6G,SAAQ,CACVrG,GAAE,UAAYH,QACdkB,KAAI,SACJuF,OAAM,CACJC,WAAU,WAEZC,OAAM,CACJzF,KAAI,UACJ0F,KAAI,CACF1F,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAW,CAAG7H,IAAKC,UAM7B6H,MAAK,iBACc,kBACH,aAKlBpH,OAAOmC,MAAMkF,OAAM,GAEnB,MAAMC,EAAG,CACPjG,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAaV,MAKjB3G,IAAIyH,SAAQ,OACdzH,IAAI0H,UAAS,OAAQC,QAAQH,GAE7BxH,IAAI6G,SAAQ,CACVrG,GAAE,QAAUgH,IACZjG,KAAI,SACJuF,OAAM,CACJC,WAAU,WAEZC,OAAM,CACJzF,KAAI,UACJ0F,KAAI,CACF1F,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAaV,SAQ3BC,OAAOD,0BAOL,MAAMjD,QAActB,cACpB5C,IAAMkE,EAAMvC,OAAOyG,UACnBnI,IAAMiE,EAAMvC,OAAO0G,SACnB7H,UAAYgD,QACZ,IAAI8E,EAAY,IAAI7E,SAAS8E,iBAAgB,CAC3CC,gBAAe,CACbzF,oBAAoB,GAEtB0F,mBAAmB,IAErBC,kBAEAlI,IAAImI,WAAWL,GACf5H,OAASF,IAAIoI,qBACbpI,IAAIqI,GAAE,QAAO,WAEXP,EAAUQ,aAEZtI,IAAImI,WAAW,IAAIlF,SAASsF,mBAC5BhJ,YAAY8C,MAAMC,QAAO,OACzBtC,IAAIqI,GAAE,YAAW,SAAYrE,GAC3BI,aACA,MAAMoE,EAAYxE,EAAEC,OACpB/D,OAAOmC,MAAMkF,OAAM,GACnB,IAAIkB,EAASC,OAAOC,KAAKH,GAAWxI,KAAG,SAAWuE,UACzCiE,EAAUjE,MAGnB,MAAMiB,EAAKnH,SAASoH,cAAa,OACjCD,EAAGhB,UAAUG,IAAG,UAChB,MAAMiE,EAAS,IAAI3F,SAASyC,OAAOF,EAAE,CACnCqD,WAAW,IAEVlD,UAAU8C,GACV5C,MAAM7F,KAQT4I,EAAOP,GAAE,WANM,WACb,MAAMpE,EAAS2E,EAAOE,YAEtBL,EAAM,CAAIxE,EAAOzE,IAAKyE,EAAOxE,QAM/BmH,OAAM,CAAEpH,IAAKC,MAIbO,IAAI6G,SAAQ,CACVrG,GAAE,QACFe,KAAI,SACJuF,OAAM,CACJC,WAAU,WAEZC,OAAM,CACJzF,KAAI,UACJ0F,KAAI,CACF1F,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAW,CAAG7H,IAAKC,UAM7B6H,MAAK,iBACc,kBACH,aAMlB,MAAME,EAAG,CACPjG,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAaoB,MAKjBzI,IAAIyH,SAAQ,OACdzH,IAAI0H,UAAS,OAAQC,QAAQH,GAE7BxH,IAAI6G,SAAQ,CACVrG,GAAE,MACFe,KAAI,SACJuF,OAAM,CACJC,WAAU,WAEZC,OAAM,CACJzF,KAAI,UACJ0F,KAAI,CACF1F,KAAI,oBACJ2F,SAAQ,EAEJ3F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,QACJ8F,YAAaoB,SAQ3B7B,OAAO6B,GACP1E,SAASC,MAEX5F,WAAWsG,iBAAgB,QAAUjB,kBACrCrF,WAAWsG,iBAAgB,UAAYL,YACvCxF,KAAK6F,iBAAgB,QAAUoB,eAC/BxG,UAAUoF,iBAAgB,QAAUqE,UACrC,MAAQC,GACPC,QAAQC,MAAMF,EAAIG,aAItB,MAAMvC,OAAMwC,eAAmB5B,OAE3B,IAAI6B,EAAK,CAAI7J,IAAKC,KAClB,MAAM6J,EAAG,uDAEPD,EAAM,GAAC,IAEPA,EAAM,GAAC,IAEP7B,EAAI,GAAC,IAELA,EAAI,GAAC,2IAGD+B,QAAaC,MAAMF,GACzB,IAAKC,EAAKE,GACR,MAAM,IAAIlG,MAAK,GAAIgG,EAAKG,UAE1B,MAAMC,QAAgBJ,EAAKK,QAGpBC,GAAUF,EAAQG,OAEzBrL,SAASiF,OAASmG,EAAOpL,SAAW,KAAM0F,QAAQ,GAElD,MAEM4F,EAAO,CACXxI,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,aACJ8F,YAPUwC,EAAOzC,SAASC,cAW1BrH,IAAI0H,UAAS,SACf1H,IAAI0H,UAAS,SAAUC,QAAQoC,GAG/B/J,IAAI6G,SAAQ,CACVrG,GAAE,QACFe,KAAI,OACJyF,OAAM,CACJzF,KAAI,UACJ0F,KAAI,CACF1F,KAAI,UACJ4F,WAAU,GACVC,SAAQ,CACN7F,KAAI,aACJ8F,YAAa0C,KAInBjD,OAAM,aACO,mBACD,SAEZQ,MAAK,cACS,uBACE,iBACE,OAKvB,MAAQ0B,GACPgB,MAAMhB,KAIJjE,gBAAe,WACnBkF,aAAaC,QAAO,WAAaC,KAAKC,UAAUjK,YAG5C+H,gBAAe,WACnB,IAAIjB,EAAOkD,KAAKE,MAAMJ,aAAaK,QAAO,aAErCrD,IACL9G,SAAW8G,EACP9G,SAASoK,OAAS,GAAGjL,UAAUkF,UAAUC,OAAM,UACnDwC,EAAKuD,SAASlG,IACZO,cAAcP,QAIZyE,SAAQ,WACZkB,aAAaQ,WAAU,YACvBC,SAASC","sources":["src/app.js"],"sourcesContent":["\"use strict\";\n\nconst submission = document.querySelector(\".submission\");\nconst type = document.querySelector(\".dropdown\");\nconst from = document.querySelector(\".dropdown2\");\nconst distance = document.querySelector(\".form__input-distace\");\nconst to = document.querySelector(\".form__input-to\");\nconst duration = document.querySelector(\".form__input-duration\");\nconst valuecadenceOrElv = document.querySelector(\".form__input-cadenceOrElv\");\nconst logs = document.querySelector(\".logs\");\nconst allLog = document.querySelectorAll(\".logs\");\nconst mapSection = document.querySelector(\".map\");\nconst formInput = document.querySelectorAll(\".form__imput\");\nconst dropdownValue = document.querySelector(\".valueChange\");\nconst modal = document.querySelector(\".modal\");\nconst overlay = document.querySelector(\".overlay\");\nconst btn = document.querySelector(\".btn-close\");\nconst clearLogs = document.querySelector(\".btn-clear\");\nconst loadingText = document.querySelector(\".loadingText\");\n\nlet lng;\nlet lat;\nlet clicklng;\nlet clicklat;\nlet typ, dis, dur, cadOrElv;\nlet workouts = [];\nlet logNumber = 0;\nlet map;\nlet distanceBetween;\nlet canvas;\nlet start = 0;\nlet end = 0;\n\nclass Workout {\n  id = Date.now();\n  #now = new Date();\n  #options = { month: \"long\", day: \"numeric\" };\n  date = new Intl.DateTimeFormat(\"en-US\", this.#options).format(this.#now);\n\n  constructor(coords, distance, duration) {\n    this.coords = coords;\n    this.distance = distance;\n    this.duration = duration;\n  }\n}\n\nclass Cycling extends Workout {\n  type = \"cycling\";\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.pace();\n  }\n\n  pace() {\n    this.pace = this.duration / this.distance;\n  }\n}\n\nclass Running extends Workout {\n  type = \"running\";\n  constructor(coords, distance, duration, elevation) {\n    super(coords, distance, duration);\n    this.elevation = elevation;\n    this.speed();\n  }\n\n  speed() {\n    this.speed = this.distance / (this.duration / 60);\n  }\n}\n\nfunction getLocation() {\n  loadingText.style.display = \"flex\";\n  const options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n  };\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n}\n\nfunction mapgl() {\n  mapboxgl.accessToken =\n    \"pk.eyJ1IjoianVzdC1rdXNoIiwiYSI6ImNrcWNrc3M0eDBsNjIycG5tNmllbWVrZ2oifQ.ZwkoOmSGWjAfsxjGJ8fzdA\";\n  map = new mapboxgl.Map({\n    container: \"map\", // container id\n    style: \"mapbox://styles/mapbox/dark-v10\",\n    center: [lng, lat],\n    zoom: 13,\n  });\n  return new Promise((resolve, reject) => {\n    resolve(map);\n    reject(new Error(\"Cannot load the map\"));\n  });\n}\n\nconst clicked = function () {};\n\nconst checkTheDropdown = function () {\n  const value = type.options[type.selectedIndex].text;\n  const value2 = from.options[from.selectedIndex].text;\n\n  if (value === \"Running\") {\n    dropdownValue.textContent = \"Cadence\";\n    valuecadenceOrElv.placeholder = \"step/min\";\n  } else {\n    dropdownValue.textContent = \"Elv Gain\";\n    valuecadenceOrElv.placeholder = \"meters\";\n  }\n};\n\nconst showForm = function (e) {\n  clicklng = e.lngLat.lng;\n  clicklat = e.lngLat.lat;\n  submission.style.display = \"grid\";\n  duration.focus();\n  to.value = `(${clicklng.toFixed(3)}, ${clicklat.toFixed(3)})`;\n  checkTheDropdown();\n};\n\nconst clearValue = function () {\n  distance.value = \"\";\n  duration.value = \"\";\n  valuecadenceOrElv.value = \"\";\n  submission.style.display = \"none\";\n};\n\nconst newWorkout = function (e) {\n  let workout;\n  if (e.key === \"Enter\") {\n    [typ, dis, dur, cadOrElv] = [\n      type.options[type.selectedIndex].text,\n      +distance.value,\n      +duration.value,\n      +valuecadenceOrElv.value,\n    ];\n\n    start++;\n    end++;\n\n    if (!(dis > 0 || !dur) > 0 || !cadOrElv > 0) {\n      modal.classList.remove(\"hidden\");\n      overlay.classList.remove(\"hidden\");\n\n      btn.addEventListener(\"click\", function () {\n        modal.classList.add(\"hidden\");\n        overlay.classList.add(\"hidden\");\n        distance.focus();\n      });\n\n      return;\n    }\n\n    if (typ === \"Cycling\")\n      workout = new Cycling([clicklng, clicklat], dis, dur, cadOrElv);\n    if (typ === \"Running\")\n      workout = new Running([clicklng, clicklat], dis, dur, cadOrElv);\n\n    workouts.push(workout);\n\n    renderWorkout(workout);\n\n    toggleMarker(workout);\n\n    clearValue();\n    logNumber++;\n    setLocalStorage();\n  }\n};\n\nconst toggleMarker = function (workout) {\n  const popup = new mapboxgl.Popup({ offset: 25, anchor: \"bottom\" }).setText(`${\n    workout.type === \"cycling\" ? \"🚴\" : \"🏃‍♂️\"\n  }\n  ${workout.type.charAt(0).toUpperCase() + workout.type.slice(1)} on ${\n    workout.date\n  }`);\n\n  // create DOM element for the marker\n  const el = document.createElement(\"div\");\n  el.classList.add(\"marker\");\n\n  // create the marker\n\n  const marker = new mapboxgl.Marker(el, {\n    // draggable: true,\n  })\n    .setLngLat(workout.coords)\n    .setPopup(popup) // sets a popup on this marker\n    .addTo(map);\n\n  // const onDragEnd = function () {\n  //   const lngLat = marker.getLngLat();\n  //   console.log(lngLat.lng, lngLat.lat);\n  //   showDirection([lngLat.lng, lngLat.lat]);\n  // };\n\n  // marker.on(\"dragend\", onDragEnd);\n};\n\nconst focusOnMarker = function (e) {\n  const element = e.target;\n  // console.log(element);\n\n  if (!element.classList.contains(\"logs\")) {\n    const CurrentID = +element.closest(\".log\").getAttribute(\"id\");\n    const arrayOfID = workouts.map((workout) => workout.id).indexOf(CurrentID);\n    const coordsOfMarker = workouts[arrayOfID].coords;\n    map.flyTo({\n      center: coordsOfMarker,\n      zoom: 14,\n      speed: 0.2,\n    });\n    // console.log(coordsOfMarker);\n    showDirection(coordsOfMarker);\n  }\n};\n\nconst renderWorkout = function (workout) {\n  logs.insertAdjacentHTML(\n    \"afterbegin\",\n    `<div id=\"${workout.id}\"class=\"log log${logNumber}\">\n              <h2 class=\"run-info\">${\n                workout.type.charAt(0).toUpperCase() + workout.type.slice(1)\n              } on ${workout.date}</h2>\n              <div class=\"log__items\">\n                <span class=\"log__items--result\">\n                  🏃‍♂️ ${workout.distance} <span class=\"units\">km</span>\n                </span>\n                <span class=\"log__items--result\"\n                  >⏱ ${workout.duration} <span class=\"units\">min</span></span\n                >\n                <span class=\"log__items--result\"\n                  >⚡️ ${\n                    workout.type === \"cycling\"\n                      ? workout.pace.toFixed(1)\n                      : workout.speed.toFixed(1)\n                  }\n                  <span class=\"units\">${\n                    workout.type === \"cycling\" ? \"km/h\" : \"min/km\"\n                  }</span></span\n                >\n                <span class=\"log__items--result\"\n                >${workout.type === \"cycling\" ? \"⛰\" : \"🦶🏼\"} ${\n      workout.type === \"cycling\" ? workout.cadence : workout.elevation\n    } <span class=\"units\">${workout.type === \"cycling\" ? \"M\" : \"SPM\"}</span>\n              </span>\n              </div>\n            </div>`\n  );\n  if (workout.type === \"running\") {\n    document\n      .querySelector(\".log\")\n      .classList.add(\"mapboxgl-popup-content-wrapper-running\");\n  }\n  if (workout.type === \"cycling\") {\n    document\n      .querySelector(\".log\")\n      .classList.add(\"mapboxgl-popup-content-wrapper-cycling\");\n  }\n};\n\nconst showDirection = function (endPoints) {\n  clearValue();\n  // make an initial directions request that\n  // starts and ends at the same location\n  launch([lng, lat]);\n  // console.log(lng, lat);\n\n  // Add starting point to the map\n  map.addLayer({\n    id: `start--${start}`,\n    type: \"circle\",\n    layout: {\n      visibility: \"visible\",\n    },\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: [lng, lat],\n            },\n          },\n        ],\n      },\n    },\n    paint: {\n      \"circle-radius\": 10,\n      \"circle-color\": \"#e61919\",\n    },\n  });\n  // this is where the code from the next step will go\n\n  canvas.style.cursor = \"\";\n  // console.log(endPoints);\n  const end = {\n    type: \"FeatureCollection\",\n    features: [\n      {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n          type: \"Point\",\n          coordinates: endPoints,\n        },\n      },\n    ],\n  };\n  if (map.getLayer(\"end\")) {\n    map.getSource(\"end\").setData(end);\n  } else {\n    map.addLayer({\n      id: `end--${end}`,\n      type: \"circle\",\n      layout: {\n        visibility: \"visible\",\n      },\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: [\n            {\n              type: \"Feature\",\n              properties: {},\n              geometry: {\n                type: \"Point\",\n                coordinates: endPoints,\n              },\n            },\n          ],\n        },\n      },\n    });\n  }\n  launch(endPoints);\n  // console.log(`--------------`);\n  // console.log(map);\n};\n\n(async function () {\n  try {\n    const value = await getLocation();\n    lng = value.coords.longitude;\n    lat = value.coords.latitude;\n    map = await mapgl();\n    let geolocate = new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true,\n      },\n      trackUserLocation: true,\n    });\n    getLocalStorage();\n    // Add the control to the map.\n    map.addControl(geolocate);\n    canvas = map.getCanvasContainer();\n    map.on(\"load\", function () {\n      geolocate;\n      geolocate.trigger();\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n    loadingText.style.display = \"none\";\n    map.on(\"dblclick\", function (e) {\n      clearValue();\n      const coordsObj = e.lngLat;\n      canvas.style.cursor = \"\";\n      let coords = Object.keys(coordsObj).map(function (key) {\n        return coordsObj[key];\n      });\n\n      const el = document.createElement(\"div\");\n      el.classList.add(\"marker\");\n      const marker = new mapboxgl.Marker(el, {\n        draggable: true,\n      })\n        .setLngLat(coords)\n        .addTo(map);\n\n      const onDragEnd = function () {\n        const lngLat = marker.getLngLat();\n        // console.log(lngLat.lng, lngLat.lat);\n        coords = [lngLat.lng, lngLat.lat];\n      };\n\n      marker.on(\"dragend\", onDragEnd);\n      // make an initial directions request that\n      // starts and ends at the same location\n      launch([lng, lat]);\n      // console.log(lng, lat);\n\n      // Add starting point to the map\n      map.addLayer({\n        id: `start`,\n        type: \"circle\",\n        layout: {\n          visibility: \"visible\",\n        },\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"FeatureCollection\",\n            features: [\n              {\n                type: \"Feature\",\n                properties: {},\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [lng, lat],\n                },\n              },\n            ],\n          },\n        },\n        paint: {\n          \"circle-radius\": 10,\n          \"circle-color\": \"#e61919\",\n        },\n      });\n      // this is where the code from the next step will go\n\n      // console.log(coords);\n      const end = {\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"Point\",\n              coordinates: coords,\n            },\n          },\n        ],\n      };\n      if (map.getLayer(\"end\")) {\n        map.getSource(\"end\").setData(end);\n      } else {\n        map.addLayer({\n          id: `end`,\n          type: \"circle\",\n          layout: {\n            visibility: \"visible\",\n          },\n          source: {\n            type: \"geojson\",\n            data: {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  type: \"Feature\",\n                  properties: {},\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: coords,\n                  },\n                },\n              ],\n            },\n          },\n        });\n      }\n      launch(coords);\n      showForm(e);\n    });\n    submission.addEventListener(\"click\", checkTheDropdown);\n    submission.addEventListener(\"keydown\", newWorkout);\n    logs.addEventListener(\"click\", focusOnMarker);\n    clearLogs.addEventListener(\"click\", clearLog);\n  } catch (err) {\n    console.error(err.message);\n  }\n})();\n\nconst launch = async function (end) {\n  try {\n    let start = [lng, lat];\n    const url =\n      \"https://api.mapbox.com/directions/v5/mapbox/driving/\" +\n      start[0] +\n      \",\" +\n      start[1] +\n      \";\" +\n      end[0] +\n      \",\" +\n      end[1] +\n      \"?steps=true&geometries=geojson&access_token=pk.eyJ1IjoianVzdC1rdXNoIiwiYSI6ImNrcWNrc3M0eDBsNjIycG5tNmllbWVrZ2oifQ.ZwkoOmSGWjAfsxjGJ8fzdA\";\n\n    const req1 = await fetch(url);\n    if (!req1.ok) {\n      throw new Error(`${req1.status}`);\n    }\n    const dataVar = await req1.json();\n    // console.log(dataVar);\n    // console.log(dataVar.routes);\n    const [values] = dataVar.routes;\n    // console.log(values);\n    distance.value = (values.distance / 1000).toFixed(3);\n    // console.log(distanceBetween);\n    const route = values.geometry.coordinates;\n    // console.log(route);\n    const geojson = {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"LineString\",\n        coordinates: route,\n      },\n    };\n    // console.log(geojson);\n    if (map.getSource(\"route\")) {\n      map.getSource(\"route\").setData(geojson);\n    } else {\n      // otherwise, make a new request\n      map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"LineString\",\n              coordinates: geojson,\n            },\n          },\n        },\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#e61919\",\n          \"line-width\": 5,\n          \"line-opacity\": 0.75,\n        },\n      });\n      // console.log(map);\n    }\n  } catch (err) {\n    alert(err);\n  }\n};\n\nconst setLocalStorage = function () {\n  localStorage.setItem(\"workouts\", JSON.stringify(workouts));\n};\n\nconst getLocalStorage = function () {\n  let data = JSON.parse(localStorage.getItem(\"workouts\"));\n  // console.log(data);\n  if (!data) return;\n  workouts = data;\n  if (workouts.length > 0) clearLogs.classList.remove(\"hidden\");\n  data.forEach((workout) => {\n    renderWorkout(workout);\n    // we will render marker in loadMap\n  });\n};\nconst clearLog = function () {\n  localStorage.removeItem(\"workouts\");\n  location.reload();\n};\n"],"names":["submission","document","querySelector","type1","from","distance","to","duration","valuecadenceOrElv","logs","allLog","querySelectorAll","mapSection","formInput","dropdownValue","modal","overlay","btn","clearLogs","loadingText","lng","lat","clicklng","clicklat","typ","dis","dur","cadOrElv","map","distanceBetween","canvas","workouts","logNumber","start","end","Workout","id","Date","now","month","day","date","Intl","DateTimeFormat","this","options","format","coords","distance1","duration1","Cycling","type","coords1","distance2","duration2","cadence","super","pace","Running","coords2","distance3","duration3","elevation","speed","getLocation","style","display","enableHighAccuracy","timeout","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","mapgl","mapboxgl","accessToken","Map","container","center","zoom","Error","clicked","checkTheDropdown","value","selectedIndex","text","textContent","placeholder","showForm","e","lngLat","focus","toFixed","clearValue","newWorkout","workout","key","classList","remove","addEventListener","add","push","renderWorkout","toggleMarker","setLocalStorage","popup","Popup","offset","anchor","setText","charAt","toUpperCase","slice","el","createElement","Marker","setLngLat","setPopup","addTo","focusOnMarker","element","target","contains","CurrentID","closest","getAttribute","arrayOfID","indexOf","coordsOfMarker","flyTo","showDirection","insertAdjacentHTML","endPoints","launch","addLayer","layout","visibility","source","data","features","properties","geometry","coordinates","paint","cursor","end1","getLayer","getSource","setData","longitude","latitude","geolocate","GeolocateControl","positionOptions","trackUserLocation","getLocalStorage","addControl","getCanvasContainer","on","trigger","NavigationControl","coordsObj","coords3","Object","keys","marker","draggable","getLngLat","clearLog","err","console","error","message","async","start1","url","req1","fetch","ok","status","dataVar","json","values","routes","geojson","alert","localStorage","setItem","JSON","stringify","parse","getItem","length","forEach","removeItem","location","reload"],"version":3,"file":"index.387b2405.js.map"}