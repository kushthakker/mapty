"use strict";const submission=document.querySelector(".submission"),type1=document.querySelector(".dropdown"),from=document.querySelector(".dropdown2"),distance=document.querySelector(".form__input-distace"),to=document.querySelector(".form__input-to"),duration=document.querySelector(".form__input-duration"),valuecadenceOrElv=document.querySelector(".form__input-cadenceOrElv"),logs=document.querySelector(".logs"),allLog=document.querySelectorAll(".logs"),mapSection=document.querySelector(".map"),formInput=document.querySelectorAll(".form__imput"),dropdownValue=document.querySelector(".valueChange"),modal=document.querySelector(".modal"),overlay=document.querySelector(".overlay"),btn=document.querySelector(".btn-close"),clearLogs=document.querySelector(".btn-clear"),loadingText=document.querySelector(".loadingText");let lng,lat,clicklng,clicklat,typ,dis,dur,cadOrElv,map,distanceBetween,canvas,workouts=[],logNumber=0,start=0,end=0;class Workout{id=Date.now();#e=new Date;#t={month:"long",day:"numeric"};date=new Intl.DateTimeFormat("en-US",this.#t).format(this.#e);constructor(e,t,o){this.coords=e,this.distance=t,this.duration=o}}class Cycling extends Workout{type="cycling";constructor(e,t,o,n){super(e,t,o),this.cadence=n,this.pace()}pace(){this.pace=this.duration/this.distance}}class Running extends Workout{type="running";constructor(e,t,o,n){super(e,t,o),this.elevation=n,this.speed()}speed(){this.speed=this.distance/(this.duration/60)}}function getLocation(){loadingText.style.display="flex";const e={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};return new Promise(((t,o)=>{navigator.geolocation.getCurrentPosition(t,o,e)}))}function mapgl(){return mapboxgl.accessToken="pk.eyJ1IjoianVzdC1rdXNoIiwiYSI6ImNrcWNrc3M0eDBsNjIycG5tNmllbWVrZ2oifQ.ZwkoOmSGWjAfsxjGJ8fzdA",map=new mapboxgl.Map({container:"map",style:"mapbox://styles/mapbox/dark-v10",center:[lng,lat],zoom:13}),new Promise(((e,t)=>{e(map),t(new Error("Cannot load the map"))}))}const clicked=function(){},checkTheDropdown=function(){const e=type1.options[type1.selectedIndex].text;from.options[from.selectedIndex].text;"Running"===e?(dropdownValue.textContent="Cadence",valuecadenceOrElv.placeholder="step/min"):(dropdownValue.textContent="Elv Gain",valuecadenceOrElv.placeholder="meters")},showForm=function(e){clicklng=e.lngLat.lng,clicklat=e.lngLat.lat,submission.style.display="grid",duration.focus(),to.value=`(${clicklng.toFixed(3)}, ${clicklat.toFixed(3)})`,checkTheDropdown()},clearValue=function(){distance.value="",duration.value="",valuecadenceOrElv.value="",submission.style.display="none"},newWorkout=function(e){let t;if("Enter"===e.key){if([typ,dis,dur,cadOrElv]=[type1.options[type1.selectedIndex].text,+distance.value,+duration.value,+valuecadenceOrElv.value],start++,end++,!(dis>0||!dur)>0||!cadOrElv>0)return modal.classList.remove("hidden"),overlay.classList.remove("hidden"),void btn.addEventListener("click",(function(){modal.classList.add("hidden"),overlay.classList.add("hidden"),distance.focus()}));"Cycling"===typ&&(t=new Cycling([clicklng,clicklat],dis,dur,cadOrElv)),"Running"===typ&&(t=new Running([clicklng,clicklat],dis,dur,cadOrElv)),workouts.push(t),renderWorkout(t),toggleMarker(t),clearValue(),logNumber++,setLocalStorage()}},toggleMarker=function(e){const t=new mapboxgl.Popup({offset:25,anchor:"bottom"}).setText(`${"cycling"===e.type?"üö¥":"üèÉ‚Äç‚ôÇÔ∏è"}\n  ${e.type.charAt(0).toUpperCase()+e.type.slice(1)} on ${e.date}`),o=document.createElement("div");o.classList.add("marker");new mapboxgl.Marker(o,{}).setLngLat(e.coords).setPopup(t).addTo(map)},focusOnMarker=function(e){const t=e.target;if(!t.classList.contains("logs")){const e=+t.closest(".log").getAttribute("id"),o=workouts.map((e=>e.id)).indexOf(e),n=workouts[o].coords;map.flyTo({center:n,zoom:14,speed:.2}),showDirection(n)}},renderWorkout=function(e){logs.insertAdjacentHTML("afterbegin",`<div id="${e.id}"class="log log${logNumber}">\n              <h2 class="run-info">${e.type.charAt(0).toUpperCase()+e.type.slice(1)} on ${e.date}</h2>\n              <div class="log__items">\n                <span class="log__items--result">\n                  üèÉ‚Äç‚ôÇÔ∏è ${e.distance} <span class="units">km</span>\n                </span>\n                <span class="log__items--result"\n                  >‚è± ${e.duration} <span class="units">min</span></span\n                >\n                <span class="log__items--result"\n                  >‚ö°Ô∏è ${"cycling"===e.type?e.pace.toFixed(1):e.speed.toFixed(1)}\n                  <span class="units">${"cycling"===e.type?"km/h":"min/km"}</span></span\n                >\n                <span class="log__items--result"\n                >${"cycling"===e.type?"‚õ∞":"ü¶∂üèº"} ${"cycling"===e.type?e.cadence:e.elevation} <span class="units">${"cycling"===e.type?"M":"SPM"}</span>\n              </span>\n              </div>\n            </div>`),"running"===e.type&&document.querySelector(".log").classList.add("mapboxgl-popup-content-wrapper-running"),"cycling"===e.type&&document.querySelector(".log").classList.add("mapboxgl-popup-content-wrapper-cycling")},showDirection=function(e){clearValue(),launch([lng,lat]),map.addLayer({id:`start--${start}`,type:"circle",layout:{visibility:"visible"},source:{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:[lng,lat]}}]}},paint:{"circle-radius":10,"circle-color":"#e61919"}}),canvas.style.cursor="";const t={type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:e}}]};map.getLayer("end")?map.getSource("end").setData(t):map.addLayer({id:`end--${t}`,type:"circle",layout:{visibility:"visible"},source:{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:e}}]}}}),launch(e)};!async function(){try{const e=await getLocation();lng=e.coords.longitude,lat=e.coords.latitude,map=await mapgl();let t=new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},trackUserLocation:!0});getLocalStorage(),map.addControl(t),canvas=map.getCanvasContainer(),map.on("load",(function(){t.trigger()})),map.addControl(new mapboxgl.NavigationControl),loadingText.style.display="none",map.on("dblclick",(function(e){clearValue();const t=e.lngLat;canvas.style.cursor="";let o=Object.keys(t).map((function(e){return t[e]}));const n=document.createElement("div");n.classList.add("marker");const a=new mapboxgl.Marker(n,{draggable:!0}).setLngLat(o).addTo(map);a.on("dragend",(function(){const e=a.getLngLat();o=[e.lng,e.lat]})),launch([lng,lat]),map.addLayer({id:"start",type:"circle",layout:{visibility:"visible"},source:{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:[lng,lat]}}]}},paint:{"circle-radius":10,"circle-color":"#e61919"}});const r={type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:o}}]};map.getLayer("end")?map.getSource("end").setData(r):map.addLayer({id:"end",type:"circle",layout:{visibility:"visible"},source:{type:"geojson",data:{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Point",coordinates:o}}]}}}),launch(o),showForm(e)})),submission.addEventListener("click",checkTheDropdown),submission.addEventListener("keydown",newWorkout),logs.addEventListener("click",focusOnMarker),clearLogs.addEventListener("click",clearLog)}catch(e){console.error(e.message)}}();const launch=async function(e){try{let t=[lng,lat];const o="https://api.mapbox.com/directions/v5/mapbox/driving/"+t[0]+","+t[1]+";"+e[0]+","+e[1]+"?steps=true&geometries=geojson&access_token=pk.eyJ1IjoianVzdC1rdXNoIiwiYSI6ImNrcWNrc3M0eDBsNjIycG5tNmllbWVrZ2oifQ.ZwkoOmSGWjAfsxjGJ8fzdA",n=await fetch(o);if(!n.ok)throw new Error(`${n.status}`);const a=await n.json(),[r]=a.routes;distance.value=(r.distance/1e3).toFixed(3);const c={type:"Feature",properties:{},geometry:{type:"LineString",coordinates:r.geometry.coordinates}};map.getSource("route")?map.getSource("route").setData(c):map.addLayer({id:"route",type:"line",source:{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:c}}},layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#e61919","line-width":5,"line-opacity":.75}})}catch(e){alert(e)}},setLocalStorage=function(){localStorage.setItem("workouts",JSON.stringify(workouts))},getLocalStorage=function(){let e=JSON.parse(localStorage.getItem("workouts"));e&&(workouts=e,workouts.length>0&&clearLogs.classList.remove("hidden"),e.forEach((e=>{renderWorkout(e)})))},clearLog=function(){localStorage.removeItem("workouts"),location.reload()};
//# sourceMappingURL=index.387b2405.js.map
